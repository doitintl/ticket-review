# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:
  - id: "branch name"
    name: "alpine"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        echo "***********************"
        echo "$BRANCH_NAME"
        echo "***********************"

  - id: "tf init"
    name: "hashicorp/terraform:1.0.0"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        if [ -d "environments/$BRANCH_NAME/" ]; then
          cd environments/$BRANCH_NAME
          terraform init
        else
          for dir in environments/*/
          do 
            cd ${dir}   
            env=${dir%*/}
            env=${env#*/}
            echo ""
            echo "*************** TERRAFORM INIT ******************"
            echo "******* At environment: ${env} ********"
            echo "*************************************************"
            terraform init || exit 1
            cd ../../
          done
        fi

  # [START tf-plan]
  - id: "tf plan"
    name: "hashicorp/terraform:1.0.0"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        if [ -d "environments/$BRANCH_NAME/" ]; then
          cd environments/$BRANCH_NAME
          terraform plan
        else
          for dir in environments/*/
          do 
            cd ${dir}   
            env=${dir%*/}
            env=${env#*/}  
            echo ""
            echo "*************** TERRAFORM PLAN ******************"
            echo "******* At environment: ${env} ********"
            echo "*************************************************"
            terraform plan || exit 1
            cd ../../
          done
        fi
  # [END tf-plan]
  # [START tf-apply]
  - id: "tf apply"
    name: "hashicorp/terraform:1.0.0"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        if [ -d "environments/$BRANCH_NAME/" ]; then
          cd environments/$BRANCH_NAME      
          terraform apply -auto-approve
        else
          echo "***************************** SKIPPING APPLYING *******************************"
          echo "Branch '$BRANCH_NAME' does not represent an official environment."
          echo "*******************************************************************************"
        fi
   # Build the container image
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/$PROJECT_ID/ticket-review-app", "./app"]
  # Push the container image to Container Registry
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/ticket-review-app"]
  # Deploy container image to Cloud Run
  - name: "gcr.io/cloud-builders/gcloud"
    args:
    - "-c"
    - |
      if [ -d "environments/$BRANCH_NAME/" ]; then
        [
          "run",
          "deploy",
          "ticket-review-app",
          "--image",
          "gcr.io/$PROJECT_ID/ticket-review-app",
          "--region",
          "us-central1",
          "--platform",
          "managed",
        ]
      else
        echo "************************** SKIPPING CLOUD RUN DEPLOY **************************"
        echo "Branch '$BRANCH_NAME' does not represent an official environment."
        echo "*******************************************************************************"
      fi
# [END tf-apply]
images:
- gcr.io/$PROJECT_ID/ticket-review-app